[]
module INJ
  sort String{} []
  sort KInt{} []
  symbol inj{Sin,Sout}(Sin):Sout []
  symbol info{S}(String{}, S) : S []
  symbol input{}(KInt{}, KInt{}, KInt{}, KInt{}) : String{} []
endmodule []

module INPUT
  import INJ []
  sort Layout{} []
  sort Type{} []
  sort Var{} []
  sort Stmt{} []
  sort Exp{} []
  sort Int{} []

  symbol stmt{}(Exp{}):Stmt{} []
  symbol ptype{}(Type{}, Type{}):Type{} []
  /* input(Stmt): HashSet<HashSet<String>> Foo; */
  axiom{} 
\exists{Stmt{}}(V0:Exp{},
\exists{Stmt{}}(V2:Exp{},
\exists{Stmt{}}(V3:Exp{},
\exists{Stmt{}}(V4:Exp{},
\exists{Stmt{}}(V6:Type{},
\exists{Stmt{}}(V1:Exp{},
\exists{Stmt{}}(V5:Exp{},
    \and{Stmt{}}(
        \equals{Exp{},Stmt{}}(V0:Exp{},inj{Var{},Exp{}}(\dv{Var{}}("HashSet"))),
    \and{Stmt{}}(
        \equals{Exp{},Stmt{}}(V2:Exp{},inj{Var{},Exp{}}(\dv{Var{}}("String"))),
    \and{Stmt{}}(
        \equals{Exp{},Stmt{}}(V3:Exp{},inj{Var{},Exp{}}(\dv{Var{}}("Foo"))),
    \and{Stmt{}}(
        \equals{Exp{},Stmt{}}(V4:Exp{},rshift{}(V2:Exp{},V3:Exp{})),
    \and{Stmt{}}(
        \equals{Type{},Stmt{}}(V6:Type{},\dv{Type{}}("HashSet")),
    \and{Stmt{}}(
        \equals{Exp{},Stmt{}}(V1:Exp{},lt{}(V0:Exp{},V0:Exp{})),
    \and{Stmt{}}(
        \equals{Exp{},Stmt{}}(V5:Exp{},lt{}(V0:Exp{},V2:Exp{})),
\or{Stmt{}}(tstmt{}(ptype{}(V6:Type{},ptype{}(V6:Type{},\dv{Type{}}("String"))),V3:Exp{}),\or{Stmt{}}(stmt{}(\or{Exp{}}(rshift{}(\or{Exp{}}(lt{}(V1:Exp{},V2:Exp{}),\or{Exp{}}(lt{}(V0:Exp{},V5:Exp{}),\bottom{Exp{}}())),V3:Exp{}),\or{Exp{}}(lt{}(V0:Exp{},\or{Exp{}}(rshift{}(V5:Exp{},V3:Exp{}),\or{Exp{}}(lt{}(V0:Exp{},V4:Exp{}),\bottom{Exp{}}()))),\or{Exp{}}(lt{}(V1:Exp{},V4:Exp{}),\bottom{Exp{}}())))),\bottom{Stmt{}}())))))))))))))))) []
  symbol lt{}(Exp{}, Exp{}):Exp{} []
  symbol tstmt{}(Type{}, Exp{}):Stmt{} []
  symbol rshift{}(Exp{}, Exp{}):Exp{} []
endmodule []
